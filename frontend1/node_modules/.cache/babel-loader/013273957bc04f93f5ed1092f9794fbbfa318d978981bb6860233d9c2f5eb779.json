{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\t6201\\\\OneDrive\\\\Documents\\\\Hackslash minor project\\\\DP\\\\frontend1\\\\src\\\\components\\\\PatientRegistration.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport axios from 'axios';\nimport { ethers } from 'ethers';\nimport ABI from \"../ABI.json\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst contractABI = ABI;\nconst contractAddress = \"0x5FbDB2315678afecb367f032d93F642f64180aa3\";\nfunction PatientRegistration() {\n  _s();\n  const [patientId, setPatientId] = useState('');\n  const [patientAddress, setPatientAddress] = useState('');\n  const [name, setName] = useState('');\n  const [age, setAge] = useState('');\n  const [photo, setPhoto] = useState('');\n  const [status, setStatus] = useState('');\n  const handleSubmit = async e => {\n    e.preventDefault();\n    try {\n      // Blockchain transaction\n      const provider = new ethers.BrowserProvider(window.ethereum);\n      const signer = provider.getSigner();\n      const contract = new ethers.Contract(contractAddress, contractABI, signer);\n      const tx = await contract.registerPatient(patientAddress, name);\n      await tx.wait();\n\n      // Save to MongoDB\n      await axios.post('/patients', {\n        patientId,\n        address: patientAddress,\n        name,\n        age,\n        photo\n      });\n      setStatus('Patient registered successfully!');\n    } catch (error) {\n      setStatus('Error registering patient.');\n      console.error(error);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Register Patient\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: handleSubmit,\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        value: patientId,\n        onChange: e => setPatientId(e.target.value),\n        placeholder: \"Patient ID\",\n        required: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        value: patientAddress,\n        onChange: e => setPatientAddress(e.target.value),\n        placeholder: \"Patient Address\",\n        required: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        value: name,\n        onChange: e => setName(e.target.value),\n        placeholder: \"Patient Name\",\n        required: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"number\",\n        value: age,\n        onChange: e => setAge(e.target.value),\n        placeholder: \"Age\",\n        required: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        value: photo,\n        onChange: e => setPhoto(e.target.value),\n        placeholder: \"Photo URL\",\n        required: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 76,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        children: \"Register Patient\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 83,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 7\n    }, this), status && /*#__PURE__*/_jsxDEV(\"p\", {\n      children: status\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 85,\n      columnNumber: 18\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 45,\n    columnNumber: 5\n  }, this);\n}\n_s(PatientRegistration, \"59U8SV5xLNJ0aAZWTJD2Rsjucn8=\");\n_c = PatientRegistration;\nexport default PatientRegistration;\nvar _c;\n$RefreshReg$(_c, \"PatientRegistration\");","map":{"version":3,"names":["React","useState","axios","ethers","ABI","jsxDEV","_jsxDEV","contractABI","contractAddress","PatientRegistration","_s","patientId","setPatientId","patientAddress","setPatientAddress","name","setName","age","setAge","photo","setPhoto","status","setStatus","handleSubmit","e","preventDefault","provider","BrowserProvider","window","ethereum","signer","getSigner","contract","Contract","tx","registerPatient","wait","post","address","error","console","children","fileName","_jsxFileName","lineNumber","columnNumber","onSubmit","type","value","onChange","target","placeholder","required","_c","$RefreshReg$"],"sources":["C:/Users/t6201/OneDrive/Documents/Hackslash minor project/DP/frontend1/src/components/PatientRegistration.js"],"sourcesContent":["import React, { useState } from 'react';\r\nimport axios from 'axios';\r\nimport { ethers } from 'ethers';\r\nimport ABI from \"../ABI.json\";\r\n\r\nconst contractABI = ABI;\r\nconst contractAddress = \"0x5FbDB2315678afecb367f032d93F642f64180aa3\";\r\n\r\nfunction PatientRegistration() {\r\n  const [patientId, setPatientId] = useState('');\r\n  const [patientAddress, setPatientAddress] = useState('');\r\n  const [name, setName] = useState('');\r\n  const [age, setAge] = useState('');\r\n  const [photo, setPhoto] = useState('');\r\n  const [status, setStatus] = useState('');\r\n\r\n  const handleSubmit = async (e) => {\r\n    e.preventDefault();\r\n    try {\r\n      // Blockchain transaction\r\n      const provider = new ethers.BrowserProvider(window.ethereum);\r\n      const signer = provider.getSigner();\r\n      const contract = new ethers.Contract(contractAddress, contractABI, signer);\r\n\r\n      const tx = await contract.registerPatient(patientAddress, name);\r\n      await tx.wait();\r\n\r\n      // Save to MongoDB\r\n      await axios.post('/patients', {\r\n        patientId,\r\n        address: patientAddress,\r\n        name,\r\n        age,\r\n        photo,\r\n      });\r\n\r\n      setStatus('Patient registered successfully!');\r\n    } catch (error) {\r\n      setStatus('Error registering patient.');\r\n      console.error(error);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <h2>Register Patient</h2>\r\n      <form onSubmit={handleSubmit}>\r\n        <input\r\n          type=\"text\"\r\n          value={patientId}\r\n          onChange={(e) => setPatientId(e.target.value)}\r\n          placeholder=\"Patient ID\"\r\n          required\r\n        />\r\n        <input\r\n          type=\"text\"\r\n          value={patientAddress}\r\n          onChange={(e) => setPatientAddress(e.target.value)}\r\n          placeholder=\"Patient Address\"\r\n          required\r\n        />\r\n        <input\r\n          type=\"text\"\r\n          value={name}\r\n          onChange={(e) => setName(e.target.value)}\r\n          placeholder=\"Patient Name\"\r\n          required\r\n        />\r\n        <input\r\n          type=\"number\"\r\n          value={age}\r\n          onChange={(e) => setAge(e.target.value)}\r\n          placeholder=\"Age\"\r\n          required\r\n        />\r\n        <input\r\n          type=\"text\"\r\n          value={photo}\r\n          onChange={(e) => setPhoto(e.target.value)}\r\n          placeholder=\"Photo URL\"\r\n          required\r\n        />\r\n        <button type=\"submit\">Register Patient</button>\r\n      </form>\r\n      {status && <p>{status}</p>}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default PatientRegistration;\r\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AACvC,OAAOC,KAAK,MAAM,OAAO;AACzB,SAASC,MAAM,QAAQ,QAAQ;AAC/B,OAAOC,GAAG,MAAM,aAAa;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE9B,MAAMC,WAAW,GAAGH,GAAG;AACvB,MAAMI,eAAe,GAAG,4CAA4C;AAEpE,SAASC,mBAAmBA,CAAA,EAAG;EAAAC,EAAA;EAC7B,MAAM,CAACC,SAAS,EAAEC,YAAY,CAAC,GAAGX,QAAQ,CAAC,EAAE,CAAC;EAC9C,MAAM,CAACY,cAAc,EAAEC,iBAAiB,CAAC,GAAGb,QAAQ,CAAC,EAAE,CAAC;EACxD,MAAM,CAACc,IAAI,EAAEC,OAAO,CAAC,GAAGf,QAAQ,CAAC,EAAE,CAAC;EACpC,MAAM,CAACgB,GAAG,EAAEC,MAAM,CAAC,GAAGjB,QAAQ,CAAC,EAAE,CAAC;EAClC,MAAM,CAACkB,KAAK,EAAEC,QAAQ,CAAC,GAAGnB,QAAQ,CAAC,EAAE,CAAC;EACtC,MAAM,CAACoB,MAAM,EAAEC,SAAS,CAAC,GAAGrB,QAAQ,CAAC,EAAE,CAAC;EAExC,MAAMsB,YAAY,GAAG,MAAOC,CAAC,IAAK;IAChCA,CAAC,CAACC,cAAc,CAAC,CAAC;IAClB,IAAI;MACF;MACA,MAAMC,QAAQ,GAAG,IAAIvB,MAAM,CAACwB,eAAe,CAACC,MAAM,CAACC,QAAQ,CAAC;MAC5D,MAAMC,MAAM,GAAGJ,QAAQ,CAACK,SAAS,CAAC,CAAC;MACnC,MAAMC,QAAQ,GAAG,IAAI7B,MAAM,CAAC8B,QAAQ,CAACzB,eAAe,EAAED,WAAW,EAAEuB,MAAM,CAAC;MAE1E,MAAMI,EAAE,GAAG,MAAMF,QAAQ,CAACG,eAAe,CAACtB,cAAc,EAAEE,IAAI,CAAC;MAC/D,MAAMmB,EAAE,CAACE,IAAI,CAAC,CAAC;;MAEf;MACA,MAAMlC,KAAK,CAACmC,IAAI,CAAC,WAAW,EAAE;QAC5B1B,SAAS;QACT2B,OAAO,EAAEzB,cAAc;QACvBE,IAAI;QACJE,GAAG;QACHE;MACF,CAAC,CAAC;MAEFG,SAAS,CAAC,kCAAkC,CAAC;IAC/C,CAAC,CAAC,OAAOiB,KAAK,EAAE;MACdjB,SAAS,CAAC,4BAA4B,CAAC;MACvCkB,OAAO,CAACD,KAAK,CAACA,KAAK,CAAC;IACtB;EACF,CAAC;EAED,oBACEjC,OAAA;IAAAmC,QAAA,gBACEnC,OAAA;MAAAmC,QAAA,EAAI;IAAgB;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eACzBvC,OAAA;MAAMwC,QAAQ,EAAEvB,YAAa;MAAAkB,QAAA,gBAC3BnC,OAAA;QACEyC,IAAI,EAAC,MAAM;QACXC,KAAK,EAAErC,SAAU;QACjBsC,QAAQ,EAAGzB,CAAC,IAAKZ,YAAY,CAACY,CAAC,CAAC0B,MAAM,CAACF,KAAK,CAAE;QAC9CG,WAAW,EAAC,YAAY;QACxBC,QAAQ;MAAA;QAAAV,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACT,CAAC,eACFvC,OAAA;QACEyC,IAAI,EAAC,MAAM;QACXC,KAAK,EAAEnC,cAAe;QACtBoC,QAAQ,EAAGzB,CAAC,IAAKV,iBAAiB,CAACU,CAAC,CAAC0B,MAAM,CAACF,KAAK,CAAE;QACnDG,WAAW,EAAC,iBAAiB;QAC7BC,QAAQ;MAAA;QAAAV,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACT,CAAC,eACFvC,OAAA;QACEyC,IAAI,EAAC,MAAM;QACXC,KAAK,EAAEjC,IAAK;QACZkC,QAAQ,EAAGzB,CAAC,IAAKR,OAAO,CAACQ,CAAC,CAAC0B,MAAM,CAACF,KAAK,CAAE;QACzCG,WAAW,EAAC,cAAc;QAC1BC,QAAQ;MAAA;QAAAV,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACT,CAAC,eACFvC,OAAA;QACEyC,IAAI,EAAC,QAAQ;QACbC,KAAK,EAAE/B,GAAI;QACXgC,QAAQ,EAAGzB,CAAC,IAAKN,MAAM,CAACM,CAAC,CAAC0B,MAAM,CAACF,KAAK,CAAE;QACxCG,WAAW,EAAC,KAAK;QACjBC,QAAQ;MAAA;QAAAV,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACT,CAAC,eACFvC,OAAA;QACEyC,IAAI,EAAC,MAAM;QACXC,KAAK,EAAE7B,KAAM;QACb8B,QAAQ,EAAGzB,CAAC,IAAKJ,QAAQ,CAACI,CAAC,CAAC0B,MAAM,CAACF,KAAK,CAAE;QAC1CG,WAAW,EAAC,WAAW;QACvBC,QAAQ;MAAA;QAAAV,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACT,CAAC,eACFvC,OAAA;QAAQyC,IAAI,EAAC,QAAQ;QAAAN,QAAA,EAAC;MAAgB;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAQ,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAC3C,CAAC,EACNxB,MAAM,iBAAIf,OAAA;MAAAmC,QAAA,EAAIpB;IAAM;MAAAqB,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACvB,CAAC;AAEV;AAACnC,EAAA,CA/EQD,mBAAmB;AAAA4C,EAAA,GAAnB5C,mBAAmB;AAiF5B,eAAeA,mBAAmB;AAAC,IAAA4C,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}