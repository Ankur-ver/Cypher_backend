{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\t6201\\\\OneDrive\\\\Documents\\\\Hackslash minor project\\\\DP\\\\frontend1\\\\src\\\\components\\\\HealthData.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport { ethers } from 'ethers';\nimport ABI from \"../ABI.json\";\nimport axios from 'axios';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst contractABI = ABI;\nconst contractAddress = \"0x5FbDB2315678afecb367f032d93F642f64180aa3\";\nfunction HealthData() {\n  _s();\n  const [patientAddress, setPatientAddress] = useState('');\n  const [healthData, setHealthData] = useState('');\n  const [status, setStatus] = useState('');\n  const handleSubmit = async e => {\n    e.preventDefault();\n    try {\n      // Blockchain transaction\n      const provider = new ethers.BrowserProvider(window.ethereum);\n      const signer = provider.getSigner();\n      const contract = new ethers.Contract(contractAddress, contractABI, signer);\n      const tx = await contract.addHealthData(patientAddress, healthData);\n      await tx.wait();\n\n      // MongoDB data saving\n      await axios.post('/healthdata', {\n        patientAddress,\n        healthData\n      });\n      setStatus('Health data added successfully!');\n    } catch (error) {\n      setStatus('Error adding health data.');\n      console.error(error);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Add Health Data\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: handleSubmit,\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        value: patientAddress,\n        onChange: e => setPatientAddress(e.target.value),\n        placeholder: \"Patient Address\",\n        required: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        value: healthData,\n        onChange: e => setHealthData(e.target.value),\n        placeholder: \"Health Data\",\n        required: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        children: \"Add Data\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 7\n    }, this), status && /*#__PURE__*/_jsxDEV(\"p\", {\n      children: status\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 18\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 39,\n    columnNumber: 5\n  }, this);\n}\n_s(HealthData, \"ECNVQSlWjPeJ28IhhBKVcJ3d/rc=\");\n_c = HealthData;\nexport default HealthData;\nvar _c;\n$RefreshReg$(_c, \"HealthData\");","map":{"version":3,"names":["React","useState","ethers","ABI","axios","jsxDEV","_jsxDEV","contractABI","contractAddress","HealthData","_s","patientAddress","setPatientAddress","healthData","setHealthData","status","setStatus","handleSubmit","e","preventDefault","provider","BrowserProvider","window","ethereum","signer","getSigner","contract","Contract","tx","addHealthData","wait","post","error","console","children","fileName","_jsxFileName","lineNumber","columnNumber","onSubmit","type","value","onChange","target","placeholder","required","_c","$RefreshReg$"],"sources":["C:/Users/t6201/OneDrive/Documents/Hackslash minor project/DP/frontend1/src/components/HealthData.js"],"sourcesContent":["import React, { useState } from 'react';\r\nimport { ethers } from 'ethers';\r\nimport ABI from \"../ABI.json\";\r\nimport axios from 'axios'; \r\n\r\nconst contractABI = ABI;\r\nconst contractAddress = \"0x5FbDB2315678afecb367f032d93F642f64180aa3\";\r\n\r\nfunction HealthData() {\r\n  const [patientAddress, setPatientAddress] = useState('');\r\n  const [healthData, setHealthData] = useState('');\r\n  const [status, setStatus] = useState('');\r\n\r\n  const handleSubmit = async (e) => {\r\n    e.preventDefault();\r\n    try {\r\n      // Blockchain transaction\r\n      const provider = new ethers.BrowserProvider(window.ethereum);\r\n      const signer = provider.getSigner();\r\n      const contract = new ethers.Contract(contractAddress, contractABI, signer);\r\n\r\n      const tx = await contract.addHealthData(patientAddress, healthData);\r\n      await tx.wait();\r\n\r\n      // MongoDB data saving\r\n      await axios.post('/healthdata', {\r\n        patientAddress,\r\n        healthData,\r\n      });\r\n\r\n      setStatus('Health data added successfully!');\r\n    } catch (error) {\r\n      setStatus('Error adding health data.');\r\n      console.error(error);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <h2>Add Health Data</h2>\r\n      <form onSubmit={handleSubmit}>\r\n        <input\r\n          type=\"text\"\r\n          value={patientAddress}\r\n          onChange={(e) => setPatientAddress(e.target.value)}\r\n          placeholder=\"Patient Address\"\r\n          required\r\n        />\r\n        <input\r\n          type=\"text\"\r\n          value={healthData}\r\n          onChange={(e) => setHealthData(e.target.value)}\r\n          placeholder=\"Health Data\"\r\n          required\r\n        />\r\n        <button type=\"submit\">Add Data</button>\r\n      </form>\r\n      {status && <p>{status}</p>}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default HealthData;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}