{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\t6201\\\\OneDrive\\\\Documents\\\\Hackslash minor project\\\\DP\\\\frontend1\\\\src\\\\components\\\\DoctorRegistration.js\",\n  _s = $RefreshSig$();\n// src/components/DoctorRegistration.js\nimport React, { useState } from 'react';\nimport { ethers } from 'ethers';\nimport ABI from \"../ABI.json\";\nimport axios from 'axios';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction DoctorRegistration() {\n  _s();\n  const [doctorAddress, setDoctorAddress] = useState('');\n  const [doctorName, setDoctorName] = useState('');\n  const [specialization, setSpecialization] = useState('');\n  const [status, setStatus] = useState('');\n  const handleSubmit = async e => {\n    e.preventDefault();\n    try {\n      // Register doctor on Blockchain and save to MongoDB via backend\n      const response = await axios.post('http://localhost:5000/doctors/register', {\n        doctorAddress,\n        doctorName,\n        specialization\n      });\n      if (response.status === 201) {\n        setStatus('Doctor registered successfully and saved to MongoDB!');\n      } else {\n        setStatus('Error saving doctor to MongoDB.');\n      }\n    } catch (error) {\n      console.error(error.response.data);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Register Doctor\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: handleSubmit,\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        value: doctorAddress,\n        onChange: e => setDoctorAddress(e.target.value),\n        placeholder: \"Doctor Address\",\n        required: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        value: doctorName,\n        onChange: e => setDoctorName(e.target.value),\n        placeholder: \"Doctor Name\",\n        required: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        value: specialization,\n        onChange: e => setSpecialization(e.target.value),\n        placeholder: \"Specialization\",\n        required: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        children: \"Register Doctor\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 7\n    }, this), status && /*#__PURE__*/_jsxDEV(\"p\", {\n      children: status\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 18\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 38,\n    columnNumber: 5\n  }, this);\n}\n_s(DoctorRegistration, \"OP5A0CRsmt/Sz/X3lK9JPNoLlds=\");\n_c = DoctorRegistration;\nexport default DoctorRegistration;\nvar _c;\n$RefreshReg$(_c, \"DoctorRegistration\");","map":{"version":3,"names":["React","useState","ethers","ABI","axios","jsxDEV","_jsxDEV","DoctorRegistration","_s","doctorAddress","setDoctorAddress","doctorName","setDoctorName","specialization","setSpecialization","status","setStatus","handleSubmit","e","preventDefault","response","post","error","console","data","children","fileName","_jsxFileName","lineNumber","columnNumber","onSubmit","type","value","onChange","target","placeholder","required","_c","$RefreshReg$"],"sources":["C:/Users/t6201/OneDrive/Documents/Hackslash minor project/DP/frontend1/src/components/DoctorRegistration.js"],"sourcesContent":["// src/components/DoctorRegistration.js\r\nimport React, { useState } from 'react';\r\nimport { ethers } from 'ethers';\r\nimport ABI from \"../ABI.json\";\r\nimport axios from 'axios';\r\n\r\n\r\n\r\n\r\nfunction DoctorRegistration() {\r\n  const [doctorAddress, setDoctorAddress] = useState('');\r\n  const [doctorName, setDoctorName] = useState('');\r\n  const [specialization, setSpecialization] = useState('');\r\n  const [status, setStatus] = useState('');\r\n\r\n  const handleSubmit = async (e) => {\r\n    e.preventDefault();\r\n\r\n    try {\r\n      // Register doctor on Blockchain and save to MongoDB via backend\r\n      const response = await axios.post('http://localhost:5000/doctors/register', {\r\n        doctorAddress,\r\n        doctorName,\r\n        specialization\r\n      });\r\n\r\n      if (response.status === 201) {\r\n        setStatus('Doctor registered successfully and saved to MongoDB!');\r\n      } else {\r\n        setStatus('Error saving doctor to MongoDB.');\r\n      }\r\n    } catch (error) {\r\n      console.error(error.response.data); \r\n    }\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <h2>Register Doctor</h2>\r\n      <form onSubmit={handleSubmit}>\r\n        <input\r\n          type=\"text\"\r\n          value={doctorAddress}\r\n          onChange={(e) => setDoctorAddress(e.target.value)}\r\n          placeholder=\"Doctor Address\"\r\n          required\r\n        />\r\n        <input\r\n          type=\"text\"\r\n          value={doctorName}\r\n          onChange={(e) => setDoctorName(e.target.value)}\r\n          placeholder=\"Doctor Name\"\r\n          required\r\n        />\r\n        <input\r\n          type=\"text\"\r\n          value={specialization}\r\n          onChange={(e) => setSpecialization(e.target.value)}\r\n          placeholder=\"Specialization\"\r\n          required\r\n        />\r\n        <button type=\"submit\">Register Doctor</button>\r\n      </form>\r\n      {status && <p>{status}</p>}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default DoctorRegistration;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}